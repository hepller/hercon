/**      ___  __   __   __
 * |__| |__  |__) /  ' /  \ |\ |
 * |  | |___ |  \ \__. \__/ | \|
 *
 * @copyright ¬© 2022 hepller
 */

// –ê–ª–∏–∞—Å—ã –∫–æ–º–∞–Ω–¥—ã
const aliases = ['usage', '–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ', 'help', '–ø–æ–º–æ—â—å']

// –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
const description = '–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–µ'

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
const usage = '<–∫–æ–º–∞–Ω–¥–∞>'

// –§—É–Ω–∫—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã
async function execute(ctx, { Keyboard, commands, config }) {

  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
  const keyboard = Keyboard.keyboard([
    Keyboard.textButton({
      label: '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥',
      payload: {
        command: 'commands'
      }
    })
  ]).inline(true)

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
  if (!ctx.args[0]) return ctx.reply('‚õî –£–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –æ –∫–æ—Ç–æ—Ä–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', { keyboard: keyboard })

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ –∞–ª–∏–∞—Å–∞–º
  const command = commands.find(cmd => cmd.aliases.includes(ctx.args[0]))

  // –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
  if (!command) return ctx.reply(`‚ö† –ö–æ–º–∞–Ω–¥—ã <<${ctx.args[0]}>> –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`, { keyboard: keyboard })

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  ctx.reply([
    `üìÑ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã <<${command.aliases[0]}>>:`,
    '',
    `${config.general.command_symbols[0]}${command.aliases[0]} ${command?.usage}`,
  ].join('\n'))
}

// –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–º–∞–Ω–¥—ã
export default { aliases, description, usage, execute }