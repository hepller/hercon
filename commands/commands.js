/**      ___  __   __   __
 * |__| |__  |__) /  ' /  \ |\ |
 * |  | |___ |  \ \__. \__/ | \|
 *
 * @copyright ¬© 2022 hepller
 */

// –ê–ª–∏–∞—Å—ã –∫–æ–º–∞–Ω–¥—ã
const aliases = ['commands', 'cmds', '–∫–æ–º–∞–Ω–¥—ã', '–∫–º–¥—Å']

// –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
const description = '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥'

// –§—É–Ω–∫—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã
async function execute(ctx, { Keyboard, commands, config }) {

  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
  const keyboard = Keyboard.keyboard([
    Keyboard.textButton({
      label: '–ê–ª–∏–∞—Å—ã –¥–ª—è –∫–æ–º–∞–Ω–¥',
      payload: {
        command: 'aliases'
      }
    })
  ]).inline(true)
  
  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  ctx.reply([
    'üí¨ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:',
    '',
    commands.map(cmd => `${config.general.command_symbols[0]}${cmd.aliases[0]} -- ${cmd.description || ctx.fields_placeholder}`).join('\n'),
    '',
    `üìù –ü—Ä–µ—Ñ–∏–∫—Å—ã –∫–æ–º–∞–Ω–¥: ${config.general.command_symbols.join(', ')}`
  ].join('\n'), { keyboard: keyboard })
}

// –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–º–∞–Ω–¥—ã
export default { aliases, description, execute }